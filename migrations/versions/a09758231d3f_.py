"""empty message

Revision ID: a09758231d3f
Revises: 
Create Date: 2020-08-24 15:05:09.520261

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a09758231d3f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_name', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education_level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exam_name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grading_scheme',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('scheme', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institution_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('language',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('language', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('language_test',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('listening',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quantitative',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rank',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rank_percentage', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reading',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('speaking',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('total',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verbal',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('writing',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emergency_contact',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('emy_name', sa.String(), nullable=True),
    sa.Column('emy_phone', sa.String(), nullable=True),
    sa.Column('emy_email', sa.String(), nullable=True),
    sa.Column('emy_relationship', sa.String(), nullable=True),
    sa.Column('emy_address', sa.String(), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam_test_score',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.Column('exam_date', sa.Date(), nullable=True),
    sa.Column('verbal_id', sa.Integer(), nullable=True),
    sa.Column('verbal_rank_id', sa.Integer(), nullable=True),
    sa.Column('quantitative_id', sa.Integer(), nullable=True),
    sa.Column('quantitative_rank_id', sa.Integer(), nullable=True),
    sa.Column('writing_id', sa.Integer(), nullable=True),
    sa.Column('writing_rank_id', sa.Integer(), nullable=True),
    sa.Column('total_id', sa.Integer(), nullable=True),
    sa.Column('total_rank_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exam.id'], ),
    sa.ForeignKeyConstraint(['quantitative_id'], ['quantitative.id'], ),
    sa.ForeignKeyConstraint(['quantitative_rank_id'], ['rank.id'], ),
    sa.ForeignKeyConstraint(['total_id'], ['total.id'], ),
    sa.ForeignKeyConstraint(['total_rank_id'], ['rank.id'], ),
    sa.ForeignKeyConstraint(['verbal_id'], ['verbal.id'], ),
    sa.ForeignKeyConstraint(['verbal_rank_id'], ['rank.id'], ),
    sa.ForeignKeyConstraint(['writing_id'], ['writing.id'], ),
    sa.ForeignKeyConstraint(['writing_rank_id'], ['rank.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('grade_scheme_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grade_scheme_id'], ['grading_scheme.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institution',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('institution_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['institution_type_id'], ['institution_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('language_test_score',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('exam_date', sa.Date(), nullable=True),
    sa.Column('listening_id', sa.Integer(), nullable=True),
    sa.Column('reading_id', sa.Integer(), nullable=True),
    sa.Column('writing_id', sa.Integer(), nullable=True),
    sa.Column('speaking_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['listening_id'], ['listening.id'], ),
    sa.ForeignKeyConstraint(['reading_id'], ['reading.id'], ),
    sa.ForeignKeyConstraint(['speaking_id'], ['speaking.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['language_test.id'], ),
    sa.ForeignKeyConstraint(['writing_id'], ['writing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state_name', sa.String(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('city',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('city_name', sa.String(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('education_level_id', sa.Integer(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('institution_type_id', sa.Integer(), nullable=True),
    sa.Column('grading_scheme_id', sa.Integer(), nullable=True),
    sa.Column('grade_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('school_name', sa.String(), nullable=True),
    sa.Column('school_address', sa.String(), nullable=True),
    sa.Column('student_number', sa.String(), nullable=True),
    sa.Column('most_recent', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['education_level_id'], ['education_level.id'], ),
    sa.ForeignKeyConstraint(['grade_id'], ['grade.id'], ),
    sa.ForeignKeyConstraint(['grading_scheme_id'], ['grading_scheme.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.ForeignKeyConstraint(['institution_type_id'], ['institution_type.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('citizenship_id', sa.Integer(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('passport_no', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('language_id', sa.Integer(), nullable=True),
    sa.Column('marital_status', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['citizenship_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['language.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['states.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profile')
    op.drop_table('education')
    op.drop_table('city')
    op.drop_table('states')
    op.drop_table('language_test_score')
    op.drop_table('institution')
    op.drop_table('grade')
    op.drop_table('exam_test_score')
    op.drop_table('emergency_contact')
    op.drop_table('writing')
    op.drop_table('verbal')
    op.drop_table('total')
    op.drop_table('speaking')
    op.drop_table('reading')
    op.drop_table('rank')
    op.drop_table('quantitative')
    op.drop_table('listening')
    op.drop_table('language_test')
    op.drop_table('language')
    op.drop_table('institution_type')
    op.drop_table('grading_scheme')
    op.drop_table('exam')
    op.drop_table('education_level')
    op.drop_table('country')
    # ### end Alembic commands ###
